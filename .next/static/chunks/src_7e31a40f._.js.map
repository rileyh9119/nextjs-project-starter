{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BarbellVisualization.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\n\ninterface BarbellVisualizationProps {\n  plates: number[];\n  totalWeight: number;\n  title?: string;\n  error?: boolean;\n}\n\nconst plateColors: Record<number, string> = {\n  45: \"#0814c2\",\n  25: \"#149106\", \n  10: \"#575454\",\n  5: \"#d48a02\",\n  2.5: \"#8f8f96\",\n};\n\nconst plateHeights: Record<number, number> = {\n  45: 240,\n  25: 216,\n  10: 192,\n  5: 168,\n  2.5: 135,\n};\n\nconst plateWidths: Record<number, number> = {\n  45: 60,\n  25: 54,\n  10: 48,\n  5: 42,\n  2.5: 36,\n};\n\nexport const BarbellVisualization: React.FC<BarbellVisualizationProps> = ({\n  plates,\n  totalWeight,\n  title,\n  error = false,\n}) => {\n  if (error) {\n    return (\n      <div className=\"flex flex-col items-center space-y-6 p-4 w-full\">\n        {title && (\n          <h2 className=\"text-2xl font-semibold text-black dark:text-white mb-2\">\n            {title}\n          </h2>\n        )}\n        <div className=\"text-xl font-medium text-red-600 dark:text-red-400\">\n          Error: weight not available\n        </div>\n      </div>\n    );\n  }\n\n  // Count plates by weight\n  const plateCounts: Record<number, number> = {};\n  plates.forEach((plate) => {\n    plateCounts[plate] = (plateCounts[plate] || 0) + 1;\n  });\n\n  // Plate order: left side (left to right): 2.5, 5, 10, 25, 45\n  const plateOrder = [2.5, 5, 10, 25, 45];\n\n  // Left side plates: from left to right (outside to inside)\n  const leftSidePlates: number[] = [];\n  plateOrder.forEach((weight) => {\n    const count = plateCounts[weight] || 0;\n    for (let i = 0; i < count; i++) {\n      leftSidePlates.push(weight);\n    }\n  });\n\n  // Right side plates: from left to right: 45, 25, 10, 5, 2.5\n  const rightPlateOrder = [45, 25, 10, 5, 2.5];\n  const rightSidePlates: number[] = [];\n  rightPlateOrder.forEach((weight) => {\n    const count = plateCounts[weight] || 0;\n    for (let i = 0; i < count; i++) {\n      rightSidePlates.push(weight);\n    }\n  });\n\n  return (\n    <div className=\"flex flex-col items-center justify-center space-y-6 p-4 w-full max-w-[1920px] mx-auto\">\n      <div className=\"text-2xl font-medium text-black dark:text-white mb-8\">\n        Total Weight: {totalWeight} lbs\n      </div>\n\n      <div className=\"relative w-full flex items-center justify-center min-h-[400px] mb-8\">\n        <div className=\"flex items-center justify-center w-full max-w-[1600px]\">\n          {/* Left side plates */}\n          <div className=\"flex items-center\">\n            {leftSidePlates.map((plate, index) => (\n              <div\n                key={`left-${index}`}\n                className=\"relative flex flex-col items-center justify-start border-2 border-black dark:border-white rounded-md\"\n                style={{\n                  backgroundColor: plateColors[plate],\n                  height: `${plateHeights[plate]}px`,\n                  width: `${plateWidths[plate]}px`,\n                }}\n                title={`${plate} lbs`}\n              >\n                <div className=\"text-white font-bold text-sm mt-2 text-center\">\n                  {plate}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Barbell */}\n          <div className=\"flex flex-col items-center justify-center mx-2\">\n            {/* Bar */}\n            <div className=\"h-4 w-[800px] bg-gray-700 rounded-full shadow-md\" />\n          </div>\n\n          {/* Right side plates */}\n          <div className=\"flex items-center\">\n            {rightSidePlates.map((plate, index) => (\n              <div\n                key={`right-${index}`}\n                className=\"relative flex flex-col items-center justify-start border-2 border-black dark:border-white rounded-md\"\n                style={{\n                  backgroundColor: plateColors[plate],\n                  height: `${plateHeights[plate]}px`,\n                  width: `${plateWidths[plate]}px`,\n                }}\n                title={`${plate} lbs`}\n              >\n                <div className=\"text-white font-bold text-sm mt-2 text-center\">\n                  {plate}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Plate legend - ordered from smallest to largest */}\n      <div className=\"flex gap-8 flex-wrap justify-center py-2 px-4 bg-gray-100 dark:bg-gray-800 rounded-lg mb-[7px]\">\n        {[2.5, 5, 10, 25, 45].map((weight) => (\n          <div key={weight} className=\"flex items-center gap-2\">\n            <div \n              className=\"w-8 h-8 border-2 border-black dark:border-white rounded-md\"\n              style={{ backgroundColor: plateColors[weight] }}\n            />\n            <span className=\"text-base font-medium text-black dark:text-white\">{weight} lbs</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default BarbellVisualization;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/plateCalculator.ts"],"sourcesContent":["/**\n * Calculate the plates needed on each side of a 45 lb barbell to reach the target total weight.\n * Available plates: 45, 25, 10, 5, 2.5 lbs\n * \n * @param totalWeight The desired total weight including the barbell\n * @returns An object with plates array and error status\n */\nexport function calculatePlates(totalWeight: number): { plates: number[], error: boolean } {\n  const barWeight = 45;\n  const availablePlates = [45, 25, 10, 5, 2.5];\n  const plates: number[] = [];\n\n  if (totalWeight < barWeight) {\n    // Cannot load less than bar weight\n    return { plates: [], error: true };\n  }\n\n  let weightToLoad = (totalWeight - barWeight) / 2;\n\n  // Check if the weight can be achieved with available plates\n  // The minimum increment is 2.5 lbs (smallest plate), so weight must be achievable in 2.5 lb increments\n  if (weightToLoad % 2.5 !== 0) {\n    return { plates: [], error: true };\n  }\n\n  for (const plate of availablePlates) {\n    while (weightToLoad >= plate) {\n      plates.push(plate);\n      weightToLoad -= plate;\n    }\n  }\n\n  // If weightToLoad is not zero here, it means exact weight cannot be matched with available plates\n  if (weightToLoad > 0) {\n    return { plates: [], error: true };\n  }\n\n  return { plates, error: false };\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;AACM,SAAS,gBAAgB,WAAmB;IACjD,MAAM,YAAY;IAClB,MAAM,kBAAkB;QAAC;QAAI;QAAI;QAAI;QAAG;KAAI;IAC5C,MAAM,SAAmB,EAAE;IAE3B,IAAI,cAAc,WAAW;QAC3B,mCAAmC;QACnC,OAAO;YAAE,QAAQ,EAAE;YAAE,OAAO;QAAK;IACnC;IAEA,IAAI,eAAe,CAAC,cAAc,SAAS,IAAI;IAE/C,4DAA4D;IAC5D,uGAAuG;IACvG,IAAI,eAAe,QAAQ,GAAG;QAC5B,OAAO;YAAE,QAAQ,EAAE;YAAE,OAAO;QAAK;IACnC;IAEA,KAAK,MAAM,SAAS,gBAAiB;QACnC,MAAO,gBAAgB,MAAO;YAC5B,OAAO,IAAI,CAAC;YACZ,gBAAgB;QAClB;IACF;IAEA,kGAAkG;IAClG,IAAI,eAAe,GAAG;QACpB,OAAO;YAAE,QAAQ,EAAE;YAAE,OAAO;QAAK;IACnC;IAEA,OAAO;QAAE;QAAQ,OAAO;IAAM;AAChC","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card } from \"@/components/ui/card\";\nimport { BarbellVisualization } from \"../components/BarbellVisualization\";\nimport { calculatePlates } from \"../lib/plateCalculator\";\n\nexport default function WeightliftingApp() {\n  const [totalWeight, setTotalWeight] = useState(\"\");\n  const [plates, setPlates] = useState<number[]>([]);\n  const [calculatedWeight, setCalculatedWeight] = useState(45);\n  const [error, setError] = useState(false);\n\n  const handleCalculate = () => {\n    const weightNum = parseFloat(totalWeight);\n    if (isNaN(weightNum) || weightNum < 45) {\n      alert(\"Please enter a valid weight greater than or equal to 45 lbs.\");\n      return;\n    }\n    const result = calculatePlates(weightNum);\n    if (result.error) {\n      setError(true);\n      setPlates([]);\n    } else {\n      setError(false);\n      setPlates(result.plates);\n    }\n    setCalculatedWeight(weightNum);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white dark:bg-black\">\n      <div className=\"relative w-full min-h-screen max-w-[1920px] mx-auto\">\n        {/* Admin Section */}\n        <Card className=\"absolute top-7 left-7 w-[320px] p-5 bg-white dark:bg-gray-900 border-gray-200 dark:border-gray-800 z-10\">\n          <div className=\"space-y-4 pt-[7px]\">\n            <div>\n              <label className=\"block text-sm font-medium text-black dark:text-white mb-2\">\n                Total Weight (lbs)\n              </label>\n              <Input\n                type=\"number\"\n                value={totalWeight}\n                onChange={(e) => setTotalWeight(e.target.value)}\n                className=\"w-full bg-white dark:bg-gray-800 [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none [-moz-appearance:textfield] text-lg\"\n                placeholder=\"Enter total weight\"\n                min={45}\n                step={0.5}\n              />\n            </div>\n            <Button\n              onClick={handleCalculate}\n              className=\"w-full bg-black hover:bg-gray-800 text-white dark:bg-white dark:hover:bg-gray-200 dark:text-black text-lg h-12\"\n            >\n              Calculate\n            </Button>\n          </div>\n        </Card>\n\n        {/* Display Section */}\n        <div className=\"pl-[340px] pr-4 h-screen flex flex-col items-center\">\n          <h1 className=\"text-6xl font-bold text-center text-black dark:text-white py-12\">\n            Drop Deadlift Gorgeous 2025\n          </h1>\n          <div className=\"flex-1 w-full flex items-center justify-center\">\n            <BarbellVisualization\n              plates={plates}\n              totalWeight={calculatedWeight}\n              error={error}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,kBAAkB;QACtB,MAAM,YAAY,WAAW;QAC7B,IAAI,MAAM,cAAc,YAAY,IAAI;YACtC,MAAM;YACN;QACF;QACA,MAAM,SAAS,CAAA,GAAA,gIAAA,CAAA,kBAAe,AAAD,EAAE;QAC/B,IAAI,OAAO,KAAK,EAAE;YAChB,SAAS;YACT,UAAU,EAAE;QACd,OAAO;YACL,SAAS;YACT,UAAU,OAAO,MAAM;QACzB;QACA,oBAAoB;IACtB;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC,mIAAA,CAAA,OAAI;oBAAC,WAAU;8BACd,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;kDACC,6LAAC;wCAAM,WAAU;kDAA4D;;;;;;kDAG7E,6LAAC,oIAAA,CAAA,QAAK;wCACJ,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wCAC9C,WAAU;wCACV,aAAY;wCACZ,KAAK;wCACL,MAAM;;;;;;;;;;;;0CAGV,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;8BAOL,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAkE;;;;;;sCAGhF,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,6IAAA,CAAA,uBAAoB;gCACnB,QAAQ;gCACR,aAAa;gCACb,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOrB;GApEwB;KAAA","debugId":null}}]
}